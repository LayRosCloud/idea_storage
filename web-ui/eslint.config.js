import js from "@eslint/js";
import globals from "globals";
import react from "eslint-plugin-react"; // üîÅ –î–æ–±–∞–≤—å —ç—Ç–æ
import reactHooks from "eslint-plugin-react-hooks";
import reactRefresh from "eslint-plugin-react-refresh";
import tseslint from "typescript-eslint";
import { eslintBoundariesConfig } from "./eslint.boundaries.js";

export default tseslint.config(
  { ignores: ["dist"] },
  {
    extends: [
      js.configs.recommended,
      ...tseslint.configs.recommended,
      react.configs.recommended, // ‚úÖ –í–∫–ª—é—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç react
    ],
    files: ["**/*.{ts,tsx}"],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaFeatures: {
          jsx: true, // ‚úÖ –í–∫–ª—é—á–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É JSX
        },
        project: "./tsconfig.app.json", // ‚úÖ –î–ª—è strict type checking
      },
    },
    settings: {
      react: {
        version: "detect", // ‚úÖ –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ React
      },
    },
    plugins: {
      react, // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≥–∏–Ω
      "react-hooks": reactHooks,
      "react-refresh": reactRefresh,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      "react-refresh/only-export-components": [
        "warn",
        { allowConstantExport: true },
      ],
      "react/prop-types": "off", // ‚ö†Ô∏è –í—ã–∫–ª—é—á–∞–µ–º, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å TypeScript
    },
  },
  eslintBoundariesConfig,
);
